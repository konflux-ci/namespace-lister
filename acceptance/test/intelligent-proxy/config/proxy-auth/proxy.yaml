---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: namespace-lister-proxy-auth
  name: namespace-lister-proxy-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: namespace-lister-proxy-auth
  minReadySeconds: 30
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: namespace-lister-proxy-auth
    spec:
      serviceAccountName: namespace-lister-proxy-auth
      initContainers:
      - name: add-sva-token-to-nginx-config
        image: registry.access.redhat.com/ubi9/ubi@sha256:66233eebd72bb5baa25190d4f55e1dc3fff3a9b77186c1f91a0abdb274452072
        command:
        - sh
        - -c
        - |
          set -e
          
          token=$(cat /mnt/api-token/token)
          token64=$(cat /mnt/api-token/token | base64 -w 0 | head -c-1)

          echo "proxy_set_header Authorization \"Bearer $token\";" > /mnt/nginx-generated-config/bearer.conf

          echo "proxy_set_header Sec-WebSocket-Protocol \"base64url.bearer.authorization.k8s.io.${token64}, base64.binary.k8s.io\";" > /mnt/nginx-generated-config/websocket.conf
        volumeMounts:
        - name: nginx-generated-config
          mountPath: /mnt/nginx-generated-config
        - name: api-token
          mountPath: /mnt/api-token
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      containers:
      - image: openresty/openresty:1.25.3.1-0-jammy
        name: nginx-120
        command: 
        - "/usr/local/openresty/bin/openresty"
        - "-g"
        - "daemon off;"
        - -c
        - /etc/nginx/nginx.conf
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        - containerPort: 9443
          name: web-tls
          protocol: TCP
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 30m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          name: namespace-lister-proxy-auth
          readOnly: true
        - name: logs
          mountPath: /var/log/nginx
        - name: nginx-tmp
          mountPath: /var/lib/nginx/tmp
        - name: run
          mountPath: /run
        - name: serving-cert
          mountPath: /mnt
        - name: nginx-generated-config
          mountPath: /mnt/nginx-generated-config
        - name: openresty
          mountPath: /var/run/openresty
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
      volumes:
      - configMap:
          defaultMode: 420
          name: namespace-lister-proxy-auth
          items:
          - key: nginx.conf
            path: nginx.conf 
        name: namespace-lister-proxy-auth
      - name: logs
        emptyDir: {}
      - name: nginx-tmp
        emptyDir: {}
      - name: run
        emptyDir: {}
      - name: serving-cert
        secret:
          secretName: serving-cert
      - name: nginx-generated-config
        emptyDir: {}
      - name: api-token
        secret:
          secretName: namespace-lister-proxy-auth
      - name: openresty
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: namespace-lister-proxy-auth
  name: namespace-lister-proxy-auth
spec:
  type: NodePort
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: web
    port: 8888
    nodePort: 30010
    protocol: TCP
    targetPort: web
  - name: web-tls
    port: 9443
    nodePort: 30011
    protocol: TCP
    targetPort: web-tls
  selector:
    app: namespace-lister-proxy-auth
